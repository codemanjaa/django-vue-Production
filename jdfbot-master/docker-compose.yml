version: "3.4"

services:
  jdfbots:
    build:
      context: ./
      dockerfile: containers/server/Dockerfile
    container_name: jdfbots
    volumes:
      - ./media:/app/media
      - jdfbots-var:/var/jdf
    environment:
      - FLASK_APP=/app/jdfbots/__init__.py
      - JDF_PAGE_TOKENS=${JDF_PAGE_TOKENS}
      - JDF_PRODUCTION=True
      - JDF_VERIFY_TOKEN=${JDF_VERIFY_TOKEN}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - SERVER_URL=${SERVER_URL}
    networks:
      - prod
      - jdf
    labels:
      - "traefik.port=80"
      - "traefik.backend=jdf"
      - "traefik.docker.network=prod"
      - "traefik.frontend.rule=Host:jdf.ehealth.hevs.ch"
      - "traefik.enable=true"

  jdfbots-db:
    image: postgres:9.6
    container_name: jdfbots-db
    volumes:
      - jdfbots-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    networks:
      - jdf

  jdfbots-backup:
    build: ./containers/backup
    container_name: jdfbots-backup
    volumes:
      - /data/jdfbots-backup:/backups
    networks:
      - jdf

volumes:
  jdfbots-data:
    name: jdfbots-data
  jdfbots-var:
    name: jdfbots-var

networks:
  prod:
    external: true
  jdf:
    external: false
